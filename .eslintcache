[{"G:\\Code\\troodku\\src\\index.js":"1","G:\\Code\\troodku\\src\\model\\card.js":"2","G:\\Code\\troodku\\src\\model\\Card.js":"3","G:\\Code\\troodku\\src\\components\\Deck.jsx":"4","G:\\Code\\troodku\\src\\components\\deck.jsx":"5","G:\\Code\\troodku\\src\\logic\\deck.js":"6","G:\\Code\\troodku\\src\\logic\\types.js":"7","G:\\Code\\troodku\\src\\components\\Card.jsx":"8","G:\\Code\\troodku\\src\\logic\\rules.js":"9"},{"size":214,"mtime":1611634565170,"results":"10","hashOfConfig":"11"},{"size":134,"mtime":1611634103790,"results":"12","hashOfConfig":"11"},{"size":167,"mtime":1612594798435,"results":"13","hashOfConfig":"11"},{"size":879,"mtime":1611634655090,"results":"14","hashOfConfig":"11"},{"size":771,"mtime":1613194680578,"results":"15","hashOfConfig":"11"},{"size":353,"mtime":1612597104792,"results":"16","hashOfConfig":"11"},{"size":295,"mtime":1611634409500,"results":"17","hashOfConfig":"11"},{"size":776,"mtime":1613193070014,"results":"18","hashOfConfig":"11"},{"size":1560,"mtime":1612596998706,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"9q01ma",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"G:\\Code\\troodku\\src\\index.js",[],["43","44"],"G:\\Code\\troodku\\src\\model\\card.js",[],"G:\\Code\\troodku\\src\\model\\Card.js",[],["45","46"],"G:\\Code\\troodku\\src\\components\\Deck.jsx",[],"G:\\Code\\troodku\\src\\components\\deck.jsx",["47"],"import React, { useState } from 'react';\nimport { Button, Paper } from \"@material-ui/core\";\nimport deck from '../logic/deck';\nimport Card from './Card';\nimport styles from './deck.module.css';\n\nconst Deck = () => {\n  const [randomCardNumber, setRandomCardNumber] = useState(Math.floor(Math.random() * (53 - 0) + 0));\n\n  return (\n    <div className={styles.deck}>\n      <Card value={deck[randomCardNumber].value} type={deck[randomCardNumber].type} rule={deck[randomCardNumber].rule} />\n      <div className={styles.infoMessage}><i>Hover the card to read the rule</i></div>\n      <Button className={styles.btnDraw} variant='contained' onClick={() => setRandomCardNumber(Math.floor(Math.random() * (53 - 0) + 0))}>Draw a card</Button>\n    </div>\n  );\n}\n\nexport default Deck;","G:\\Code\\troodku\\src\\logic\\deck.js",["48","49"],"import Card from '../model/Card';\r\nimport types from './types';\r\nimport rules from './rules';\r\n\r\nconst deck = [];\r\nconst values = [ '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace' ];\r\n\r\nvalues.map(v => {\r\n    types.map(t => {\r\n        deck.push(new Card(t, v, rules[values.indexOf(v)]));\r\n    })\r\n});\r\n\r\nexport default deck;","G:\\Code\\troodku\\src\\logic\\types.js",[],"G:\\Code\\troodku\\src\\components\\Card.jsx",["50"],"import React, { useState } from 'react';\r\nimport styles from './card.module.css';\r\n\r\nconst Card = ({ value, type, rule }) => {\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const valueLetter = value === '10' ? '10' : value.split('')[0] ;\r\n  const typeLetter = type.name.split('')[0];\r\n  const cardFile = './cards/' + valueLetter + typeLetter + '.png';\r\n  \r\n  return (\r\n    <div className={styles.outerCard}> \r\n      <div className={flipped ? `${styles.card} ${styles.flipped}` : styles.card}>\r\n        <div className={styles.front}>\r\n          <img alt=\"Card\" src={cardFile} className={styles.front} />\r\n        </div>\r\n        <div className={styles.back}>\r\n          <div>{rule.rule}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","G:\\Code\\troodku\\src\\logic\\rules.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":18,"nodeType":"59","messageId":"60","endLine":2,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":8,"column":14,"nodeType":"63","messageId":"64","endLine":8,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":9,"column":17,"nodeType":"63","messageId":"64","endLine":9,"endColumn":19},{"ruleId":"57","severity":1,"message":"65","line":5,"column":19,"nodeType":"59","messageId":"60","endLine":5,"endColumn":29},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setFlipped' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]